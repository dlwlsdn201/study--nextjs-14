import Link from 'next/link';
import { Suspense } from 'react';

export const metadata = {
  title: 'Home',
  description: 'Generated by Next.js',
};

export const fetchURL = 'https://nomad-movies.nomadcoders.workers.dev/movies';

const getMovies = async () => {
  return fetch(fetchURL).then((response) => response.json());
};

export default async function HomePage() {
  const movies = await getMovies();

  /* SECTION - [Client Side fetching] */
  // const [movies, setMovies] = useState([]);
  // const [loading, setLoading] = useState(true);

  // const getMovies = async () => {
  //   try {
  //     setLoading(true);
  //     const response = await fetch(
  //       'https://nomad-movies.nomadcoders.workers.dev/movies'
  //     );

  //     const json = await response.json();
  //     setMovies(json);
  //     setLoading(false);
  //   } catch (error) {}
  // };

  // useEffect(() => {
  //   getMovies();
  // }, []);
  // return <div>{loading ? 'Loading...' : JSON.stringify(movies)}</div>;
  // return <div>{JSON.stringify(movies)}</div>;
  return (
    // <Suspense fallback={<div>Loading!!!</div>}>
    <div>
      {movies.map((movie, idx: number) => (
        <li key={idx}>
          <Link href={`/movies/${movie.id}`}>{movie.title}</Link>
        </li>
      ))}
    </div>
    // </Suspense>
  );
}

// const MovieList = async () => {
//   let list: { id: number; title: string }[] | [] = [];
//   list = await fetch(fetchURL).then((response) => response.json());
//   await new Promise((resolve) => {
//     setTimeout(resolve, 2000);
//   });

//   return (
//     <ul>
//       {list.map((movie) => (
//         <li key={movie.id}>{movie.title}</li>
//       ))}
//     </ul>
//   );
// };
